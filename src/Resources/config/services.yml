services:
    swagger.validator_map:
        class: Nicofuma\SwaggerBundle\Validator\ValidatorMap
        arguments:
          - '@service_container'
          - [] # Validator's array map

    swagger.validator:
        class: Nicofuma\SwaggerBundle\Validator\Validator
        abstract: true
        arguments:
          - '@swagger.json_schema.constraints.factory'
          - ~ # SchemaManager
          - ~ # Strict

    swagger.schema_manager_factory:
        class: Nicofuma\SwaggerBundle\Swagger\SchemaManagerFactory
        arguments:
          - '@kernel'

    swagger.schema_manager:
        class: FR3D\SwaggerAssertions\SchemaManager
        abstract: true
        factory: ['@swagger.schema_manager_factory', createFromFile]
        arguments:
          - ~ # SwaggerFile

    swagger.validator_listener:
        class: Nicofuma\SwaggerBundle\EventListener\ValidatorListener
        arguments:
          - '@swagger.validator_map'
        tags:
          - { name: kernel.event_subscriber }

    swagger.fos_rest.request.param_fetcher:
        class: Nicofuma\SwaggerBundle\FosRest\ParamFetcher
        arguments:
          - ~ # Inner service
          - '@swagger.validator_map'
          - '@request_stack'

    swagger.json_schema.constraints.factory:
        class: Nicofuma\SwaggerBundle\JsonSchema\Constraints\Factory

    # Override the JsonSchema's format constraint
    swagger.json_schema.constraints.format:
        class: Nicofuma\SwaggerBundle\JsonSchema\Constraints\FormatConstraint
        tags:
          - { name: swagger.json_schema.constraint, constraint: format }

    # Add a validator for the UUID format
    swagger.json_schema.format_validator.uuid:
        class: Nicofuma\SwaggerBundle\JsonSchema\Constraints\Format\UUIDValidator
        arguments:
          - '@?validator'
        tags:
          - { name: swagger.format_validator, format: uuid }
